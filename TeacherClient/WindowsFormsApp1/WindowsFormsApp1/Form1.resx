<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IxbpPYCaz0UAAAAASUVORK5CYII=
</value>
  </data>
</root>